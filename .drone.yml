kind: pipeline
name: terraform-aws-astronomer-enterprise

steps:

- name: lint
  image: hashicorp/terraform:0.12.29
  commands:
    - cp providers.tf.example providers.tf
    - terraform init
    - terraform fmt -check=true
    - terraform validate -var "deployment_id=validate" -var "route53_domain=validate-fake.com" -var "email=fake@mailinator.com"
    - |
      for example in $(find examples -maxdepth 1 -mindepth 1 -type d); do
      cp providers.tf $example
      cd $example
      echo $example
      terraform init
      terraform fmt -check=true
      terraform validate -var "deployment_id=citest"
      cd -
      done
    - terraform -v
  when:
    event:
      - pull_request
      - push

- name: ci-environment
  image: plugins/docker
  settings:
    username:
      from_secret: DOCKER_USER
    password:
      from_secret: DOCKER_PASSWORD
    repo:
      from_secret: DOCKER_REPO
    auto_tag: true
    dockerfile: pipeline/Dockerfile
  when:
    event:
      - push

- name: terraform_apply
  image: sjmiller609/helm-kubectl-terraform:latest
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  commands:
    - EXAMPLE=from_scratch pipeline/run_terraform.sh
  when:
    event:
      - push

- name: terraform_destroy
  image: sjmiller609/helm-kubectl-terraform:latest
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  commands:
    - DESTROY=1 EXAMPLE=from_scratch pipeline/run_terraform.sh
  when:
    event:
      - push
    status:
      - failure
      - success

- name: git_tag
  image: docker:git
  environment:
    DEPLOY_KEY:
      from_secret: DEPLOY_KEY
  commands:
    - eval `ssh-agent`
    - echo "$DEPLOY_KEY" | ssh-add -
    - TAG=1.0.${DRONE_BUILD_NUMBER}
    - git tag $TAG
    - mkdir -p $HOME/.ssh
    - ssh-keyscan -t rsa github.com >> $HOME/.ssh/known_hosts
    - git push $DRONE_GIT_SSH_URL $DRONE_BRANCH --tags
  when:
    event:
      - push
    status:
      - success
    branch:
      - master

- name: slack
  image: plugins/slack
  settings:
    webhook:
      from_secret: WEBHOOK_URL
    channel: ci-debug
    username: terraform-ci
    template: >
      {{repo.name}}
      {{build.link}}
      {{#success build.status}}
        succeeded
      {{else}}
        failed
      {{/success}}
  when:
    event:
      - push
    status:
      - success
      - failure
    branch:
      - master
    repo:
    - astronomer/terraform-aws-astronomer-enterprise

- name: slack_tag
  image: plugins/slack
  settings:
    webhook:
      from_secret: WEBHOOK_URL
    channel: ci-debug
    username: terraform-ci
    template: >
      {{repo.name}}
      version {{build.tag}} released
  when:
    event:
      - tag
    status:
      - success
    branch:
      - master
    repo:
    - astronomer/terraform-aws-astronomer-enterprise
